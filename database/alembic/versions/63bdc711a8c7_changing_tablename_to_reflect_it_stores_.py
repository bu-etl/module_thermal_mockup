"""changing tablename to reflect it stores readout data

Revision ID: 63bdc711a8c7
Revises: d3137acd9da9
Create Date: 2025-04-23 11:30:09.070486

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '63bdc711a8c7'
down_revision: Union[str, None] = 'd3137acd9da9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bb_resistance_path_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('module_orientation', sa.String(length=50), nullable=True),
    sa.Column('plate_position', sa.Integer(), nullable=True),
    sa.Column('ref_resistor_value', sa.Float(), nullable=False),
    sa.Column('path_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('raw_voltage', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bb_resistance_path_data_module_id'), 'bb_resistance_path_data', ['module_id'], unique=False)
    op.create_index(op.f('ix_bb_resistance_path_data_run_id'), 'bb_resistance_path_data', ['run_id'], unique=False)
    op.drop_index('ix_bb_resistance_path_module_id', table_name='bb_resistance_path')
    op.drop_index('ix_bb_resistance_path_run_id', table_name='bb_resistance_path')
    op.drop_table('bb_resistance_path')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bb_resistance_path',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('run_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('module_orientation', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('plate_position', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ref_resistor_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('raw_voltage', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('path_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['module.id'], name='bb_resistance_path_module_id_fkey'),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], name='bb_resistance_path_run_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bb_resistance_path_pkey')
    )
    op.create_index('ix_bb_resistance_path_run_id', 'bb_resistance_path', ['run_id'], unique=False)
    op.create_index('ix_bb_resistance_path_module_id', 'bb_resistance_path', ['module_id'], unique=False)
    op.drop_index(op.f('ix_bb_resistance_path_data_run_id'), table_name='bb_resistance_path_data')
    op.drop_index(op.f('ix_bb_resistance_path_data_module_id'), table_name='bb_resistance_path_data')
    op.drop_table('bb_resistance_path_data')
    # ### end Alembic commands ###

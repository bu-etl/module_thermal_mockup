"""Added Calibration tables, removed control board fkey and moved it to the data, added positions and plate config to the db as well (KEEPING EVERYTHING NULLABLE FIRST)

Revision ID: 8ebf2388aaef
Revises: 2d99500d2b70
Create Date: 2024-12-02 05:56:31.539766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8ebf2388aaef'
down_revision: Union[str, None] = '2d99500d2b70'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cold_plate',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('positions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('plate_image', sa.LargeBinary(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    op.create_table('sensor_calibration',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('module_id', sa.Integer(), nullable=False),
        sa.Column('sensor', sa.String(length=50), nullable=False),
        sa.Column('fit_ohms_over_celcius', sa.Float(), nullable=False),
        sa.Column('fit_ohms_intercept', sa.Float(), nullable=False),
        sa.Column('celcius', postgresql.ARRAY(sa.Float()), nullable=False),
        sa.Column('ohms', postgresql.ARRAY(sa.Float()), nullable=False),
        sa.Column('raw_adc', postgresql.ARRAY(sa.String(length=50)), nullable=False),
        sa.Column('times', postgresql.ARRAY(sa.DateTime()), nullable=False),
        sa.Column('all_raw_adcs', postgresql.ARRAY(sa.DateTime()), nullable=False),
        sa.Column('all_raw_times', postgresql.ARRAY(sa.DateTime()), nullable=False),
        sa.ForeignKeyConstraint(['module_id'], ['module.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table('module_calibration',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('comment', sa.String(length=500), nullable=True),
        sa.Column('E1_id', sa.Integer(), nullable=True),
        sa.Column('E2_id', sa.Integer(), nullable=True),
        sa.Column('E3_id', sa.Integer(), nullable=True),
        sa.Column('E4_id', sa.Integer(), nullable=True),
        sa.Column('L1_id', sa.Integer(), nullable=True),
        sa.Column('L2_id', sa.Integer(), nullable=True),
        sa.Column('L3_id', sa.Integer(), nullable=True),
        sa.Column('L4_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['E1_id'], ['sensor_calibration.id'], ),
        sa.ForeignKeyConstraint(['E2_id'], ['sensor_calibration.id'], ),
        sa.ForeignKeyConstraint(['E3_id'], ['sensor_calibration.id'], ),
        sa.ForeignKeyConstraint(['E4_id'], ['sensor_calibration.id'], ),
        sa.ForeignKeyConstraint(['L1_id'], ['sensor_calibration.id'], ),
        sa.ForeignKeyConstraint(['L2_id'], ['sensor_calibration.id'], ),
        sa.ForeignKeyConstraint(['L3_id'], ['sensor_calibration.id'], ),
        sa.ForeignKeyConstraint(['L4_id'], ['sensor_calibration.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    op.add_column('data', sa.Column('control_board_id', sa.Integer(), nullable=True))
    op.add_column('data', sa.Column('control_board_position', sa.Integer(), nullable=True))
    op.add_column('data', sa.Column('module_orientation', sa.String(length=50), nullable=True))
    op.add_column('data', sa.Column('plate_position', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'data', 'control_board', ['control_board_id'], ['id'])
    op.add_column('module', sa.Column('calibration_id', sa.Integer(), nullable=True))
    op.drop_constraint('module_position_on_D_key', 'module', type_='unique')
    op.drop_constraint('module_control_board_id_fkey', 'module', type_='foreignkey')
    op.create_foreign_key(None, 'module', 'module_calibration', ['calibration_id'], ['id'])
    op.drop_column('module', 'position_on_D')
    op.drop_column('module', 'control_board_pos')
    op.drop_column('module', 'control_board_id')
    op.add_column('run', sa.Column('cold_plate_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'run', 'cold_plate', ['cold_plate_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'run', type_='foreignkey')
    op.drop_column('run', 'cold_plate_id')
    op.add_column('module', sa.Column('control_board_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('module', sa.Column('control_board_pos', sa.VARCHAR(length=1), autoincrement=False, nullable=True))
    op.add_column('module', sa.Column('position_on_D', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'module', type_='foreignkey')
    op.create_foreign_key('module_control_board_id_fkey', 'module', 'control_board', ['control_board_id'], ['id'])
    op.create_unique_constraint('module_position_on_D_key', 'module', ['position_on_D'])
    op.drop_column('module', 'calibration_id')
    op.drop_constraint(None, 'data', type_='foreignkey')
    op.drop_column('data', 'plate_position')
    op.drop_column('data', 'module_orientation')
    op.drop_column('data', 'control_board_position')
    op.drop_column('data', 'control_board_id')
    op.drop_table('sensor_calibration')
    op.drop_table('module_calibration')
    op.drop_table('cold_plate')
    # ### end Alembic commands ###

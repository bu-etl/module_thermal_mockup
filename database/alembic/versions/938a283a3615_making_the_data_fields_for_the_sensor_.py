"""making the data fields for the sensor calibration nullable, you only really need the slope and intercept ones

Revision ID: 938a283a3615
Revises: 76c97f65c84e
Create Date: 2024-12-02 10:19:54.173967

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '938a283a3615'
down_revision: Union[str, None] = '76c97f65c84e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sensor_calibration', 'celcius',
               existing_type=postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)),
               nullable=True)
    op.alter_column('sensor_calibration', 'ohms',
               existing_type=postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)),
               nullable=True)
    op.alter_column('sensor_calibration', 'raw_adc',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=50)),
               nullable=True)
    op.alter_column('sensor_calibration', 'times',
               existing_type=postgresql.ARRAY(postgresql.TIMESTAMP()),
               nullable=True)
    op.alter_column('sensor_calibration', 'all_raw_adcs',
               existing_type=postgresql.ARRAY(postgresql.TIMESTAMP()),
               nullable=True)
    op.alter_column('sensor_calibration', 'all_raw_times',
               existing_type=postgresql.ARRAY(postgresql.TIMESTAMP()),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sensor_calibration', 'all_raw_times',
               existing_type=postgresql.ARRAY(postgresql.TIMESTAMP()),
               nullable=False)
    op.alter_column('sensor_calibration', 'all_raw_adcs',
               existing_type=postgresql.ARRAY(postgresql.TIMESTAMP()),
               nullable=False)
    op.alter_column('sensor_calibration', 'times',
               existing_type=postgresql.ARRAY(postgresql.TIMESTAMP()),
               nullable=False)
    op.alter_column('sensor_calibration', 'raw_adc',
               existing_type=postgresql.ARRAY(sa.VARCHAR(length=50)),
               nullable=False)
    op.alter_column('sensor_calibration', 'ohms',
               existing_type=postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)),
               nullable=False)
    op.alter_column('sensor_calibration', 'celcius',
               existing_type=postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)),
               nullable=False)
    # ### end Alembic commands ###
